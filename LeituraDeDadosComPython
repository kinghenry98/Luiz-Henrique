Carregando…
Pular para o conteúdo principal
Pandas
Pandas é um pacote Python que fornece estruturas de dados rápidas, flexíveis e expressivas projetadas para tornar o trabalho com dados “relacionais” ou “rotulados” fácil e intuitivo. Ele visa ser o bloco de construção fundamental de alto nível para fazer análises práticas de dados do mundo real em Python. Além disso, tem o objetivo mais amplo de se tornar a ferramenta de análise/manipulação de dados de código aberto mais poderosa e flexível.

Pandas é adequado para muitos tipos diferentes de dados:

Dados tabulares com colunas de tipo heterogêneo, como em uma tabela SQL ou planilha do Excel

Dados de série temporal ordenados e não ordenados (não necessariamente de frequência fixa).

Dados de matriz arbitrária (tipo homogêneo ou heterogêneo) com rótulos de linha e coluna

Qualquer outra forma de conjuntos de dados observacionais/estatísticos. Os dados não precisam ser rotulados para serem colocados em uma estrutura de dados do pandas

[ ]
import pandas as pd
import numpy as np # Calculos, Computação de matrizes e vetores
from sklearn.datasets import fetch_california_housing
[ ]
# Fetch_california_housing contem um conjunto de dados de estudo.
# Adicionamos os dados de estudo ao objeto chamado data
# estes dados estão em um array bi-dimensional
data = fetch_california_housing()
data
{'data': array([[   8.3252    ,   41.        ,    6.98412698, ...,    2.55555556,
           37.88      , -122.23      ],
        [   8.3014    ,   21.        ,    6.23813708, ...,    2.10984183,
           37.86      , -122.22      ],
        [   7.2574    ,   52.        ,    8.28813559, ...,    2.80225989,
           37.85      , -122.24      ],
        ...,
        [   1.7       ,   17.        ,    5.20554273, ...,    2.3256351 ,
           39.43      , -121.22      ],
        [   1.8672    ,   18.        ,    5.32951289, ...,    2.12320917,
           39.43      , -121.32      ],
        [   2.3886    ,   16.        ,    5.25471698, ...,    2.61698113,
           39.37      , -121.24      ]]),
 'target': array([4.526, 3.585, 3.521, ..., 0.923, 0.847, 0.894]),
 'frame': None,
 'target_names': ['MedHouseVal'],
 'feature_names': ['MedInc',
  'HouseAge',
  'AveRooms',
  'AveBedrms',
  'Population',
  'AveOccup',
  'Latitude',
  'Longitude'],
 'DESCR': '.. _california_housing_dataset:\n\nCalifornia Housing dataset\n--------------------------\n\n**Data Set Characteristics:**\n\n    :Number of Instances: 20640\n\n    :Number of Attributes: 8 numeric, predictive attributes and the target\n\n    :Attribute Information:\n        - MedInc        median income in block group\n        - HouseAge      median house age in block group\n        - AveRooms      average number of rooms per household\n        - AveBedrms     average number of bedrooms per household\n        - Population    block group population\n        - AveOccup      average number of household members\n        - Latitude      block group latitude\n        - Longitude     block group longitude\n\n    :Missing Attribute Values: None\n\nThis dataset was obtained from the StatLib repository.\nhttps://www.dcc.fc.up.pt/~ltorgo/Regression/cal_housing.html\n\nThe target variable is the median house value for California districts,\nexpressed in hundreds of thousands of dollars ($100,000).\n\nThis dataset was derived from the 1990 U.S. census, using one row per census\nblock group. A block group is the smallest geographical unit for which the U.S.\nCensus Bureau publishes sample data (a block group typically has a population\nof 600 to 3,000 people).\n\nA household is a group of people residing within a home. Since the average\nnumber of rooms and bedrooms in this dataset are provided per household, these\ncolumns may take surprisingly large values for block groups with few households\nand many empty houses, such as vacation resorts.\n\nIt can be downloaded/loaded using the\n:func:`sklearn.datasets.fetch_california_housing` function.\n\n.. topic:: References\n\n    - Pace, R. Kelley and Ronald Barry, Sparse Spatial Autoregressions,\n      Statistics and Probability Letters, 33 (1997) 291-297\n'}
[ ]
df = pd.DataFrame(data = np.c_[data['data'], data['target']],
                  columns= data['feature_names'] + ['target'])
[ ]
type(df)
pandas.core.frame.DataFrame
[ ]
df.head() # Head retorna as primeiras linhas do conjunto de dados

[ ]
df.tail(5) # Tail retorna as ultimas linhas do conjunto de dados

[ ]
df.shape # apresenta quantidade de registros e colunas
(20640, 9)
[ ]
df.sample(1000)

[ ]
df.sample(3)

[ ]
pd.set_option('display.max_columns', 100) # define máximo de colunas em 100
pd.set_option('display.max_rows', 1000) # define máximo de linhas em 1000
[ ]
df.sample(20) # trás resultado de lugares aleatórios

[ ]
df.info() # informações sobre o conjunto de dados
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 20640 entries, 0 to 20639
Data columns (total 9 columns):
 #   Column      Non-Null Count  Dtype  
---  ------      --------------  -----  
 0   MedInc      20640 non-null  float64
 1   HouseAge    20640 non-null  float64
 2   AveRooms    20640 non-null  float64
 3   AveBedrms   20640 non-null  float64
 4   Population  20640 non-null  float64
 5   AveOccup    20640 non-null  float64
 6   Latitude    20640 non-null  float64
 7   Longitude   20640 non-null  float64
 8   target      20640 non-null  float64
dtypes: float64(9)
memory usage: 1.4 MB
## Analise Exploratória

[ ]
df.describe() # Descreve os Dados fornencendo  algumas estatisticas


[ ]
cols = ['HouseAge', 'AveRooms', 'AveBedrms', 'Population', 'target'] # Seleciona 5 variáveis que vamos usar neste moment]
df_filtrado = df[cols]
[ ]
df_filtrado.sample(4)

[ ]
df_reduzido = df_filtrado.loc[(df_filtrado ['HouseAge'] >=50) & (df_filtrado['Population'] > 300) ]

[ ]
df_reduzido.sample(4)

**Medidas de tendência central
#Media

#Soma dos Elementos dividido pela quantidade

[ ]
df_reduzido['Population'].sum() / len(df_reduzido['Population'])
1000.3050221565732
[ ]
df_reduzido['Population'].mean()
1000.3050221565732
[ ]
import plotly.express as px
[ ]
fig = px.histogram(df,x='HouseAge')
fig.show()

[ ]
fig = px.line(df_reduzido, y= 'HouseAge')
fig.show()

Produtos pagos do Colab - Cancelar contratos
